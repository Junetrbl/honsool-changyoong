{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/parkyoonsoo/Documents/GitHub/honsool-changyoong/src/component/ImageList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Header from \"./Header.js\";\nimport Vote from \"./Vote.js\";\nimport blanc from \"../static/images/blanc.jpg\";\nimport cass from \"../static/images/cass.png\";\nimport hoegarden from \"../static/images/hoegarden.jpg\";\nimport jinro from \"../static/images/jinro.jpeg\";\nimport terra from \"../static/images/terra.jpg\";\nimport chungha from \"../static/images/chungha.jpg\"; //추가\n\nimport { Link } from \"react-router-dom\";\nlet store, setStore;\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch'\n  }\n}));\n\nconst ImageList = () => {\n  _s();\n\n  const images = [{\n    id: 1,\n    url: blanc,\n    title: \"블랑\",\n    width: \"50%\",\n    link: \"/content/\",\n    comment: [{\n      writer: 'user1',\n      comment: '블랑 소맥이 특이합니다'\n    }, {\n      writer: 'user2',\n      comment: '명란 구이랑 같이 먹는 걸 추천해요'\n    }]\n  }, {\n    id: 2,\n    url: cass,\n    title: \"카스\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: []\n  }, {\n    id: 3,\n    url: hoegarden,\n    title: \"호가든\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: []\n  }, {\n    id: 4,\n    url: jinro,\n    title: \"진로\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: []\n  }, {\n    id: 5,\n    url: terra,\n    title: \"테라\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: []\n  }, {\n    id: 6,\n    url: chungha,\n    title: \"청하\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: []\n  }];\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false); //추가\n\n  const [body, setBody] = React.useState(null);\n  const [store, setStore] = React.useState(images); //추가\n\n  const createBody = tile => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"simple-modal-title\",\n        children: tile.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: tile.url,\n        alt: tile.title,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), tile.comment.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", comment.writer, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            paddingLeft: 10\n          },\n          children: [\" \", comment.comment, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-full-width\",\n          label: \"\\uB313\\uAE00\",\n          style: {\n            margin: 8\n          },\n          placeholder: \"\\uC774 \\uC220\\uC740\\uC694...\",\n          inputRef: userComment,\n          helperText: \"\\uB2F9\\uC2E0\\uC758 \\uACBD\\uD5D8\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => addHandler(tile),\n          children: \"\\uAC8C\\uC2DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleOpen = tile => {\n    setOpen(true); //추가\n\n    setBody(createBody(tile));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const userComment = useRef();\n\n  const addHandler = tile => {\n    addItem(tile, {\n      writer: 'user3',\n      comment: userComment.current.value\n    });\n  };\n\n  function addItem(tile, newItem) {\n    const target = store.findIndex(image => image.id == tile.id);\n    const deleted = store.splice(target, 1)[0];\n    const newImage = { ...deleted,\n      comment: [...deleted.comment, newItem //이건 새로받은 comment임\n      ]\n    };\n    setStore([newImage, ...store]);\n    setBody(createBody(newImage));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Vote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      children: store.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        onClick: //추가\n        () => {\n          handleOpen(tile);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.url,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about ${tile.title}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageList, \"wakjZ/nxVsAEqbp0eigzsnnxSnI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImageList;\nexport default ImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"sources":["/Users/parkyoonsoo/Documents/GitHub/honsool-changyoong/src/component/ImageList.js"],"names":["React","useState","useRef","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","Modal","TextField","Button","Header","Vote","blanc","cass","hoegarden","jinro","terra","chungha","Link","store","setStore","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","position","boxShadow","shadows","padding","spacing","textField","marginLeft","marginRight","ImageList","images","id","url","title","link","comment","writer","classes","modalStyle","open","setOpen","body","setBody","createBody","tile","map","paddingLeft","margin","userComment","shrink","addHandler","handleOpen","handleClose","addItem","current","value","newItem","target","findIndex","image","deleted","splice","newImage","img"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,IAAIC,KAAJ,EAAWC,QAAX;;AAIA,SAASC,IAAT,GAAgB;AACd,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAAxC;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,QAAMC,GAAG,GAAG,KAAKL,IAAI,EAArB;AACA,QAAMM,IAAI,GAAG,KAAKN,IAAI,EAAtB;AAEA,SAAO;AACLK,IAAAA,GAAG,EAAG,GAAEA,GAAI,GADP;AAELC,IAAAA,IAAI,EAAG,GAAEA,IAAK,GAFT;AAGLC,IAAAA,SAAS,EAAG,cAAaF,GAAI,OAAMC,IAAK;AAHnC,GAAP;AAKD;;AAED,MAAME,SAAS,GAAG7B,UAAU,CAAE8B,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GADiC;AAQvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,GADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GAR6B;AAYvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAZiC;AAevCL,EAAAA,KAAK,EAAE;AACLM,IAAAA,QAAQ,EAAE,UADL;AAELJ,IAAAA,KAAK,EAAE,GAFF;AAGLL,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KAHrC;AAILO,IAAAA,SAAS,EAAEhB,KAAK,CAACiB,OAAN,CAAc,CAAd,CAJN;AAKLC,IAAAA,OAAO,EAAElB,KAAK,CAACmB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AALJ,GAfgC;AAsBvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAErB,KAAK,CAACmB,OAAN,CAAc,CAAd,CADH;AAETG,IAAAA,WAAW,EAAEtB,KAAK,CAACmB,OAAN,CAAc,CAAd,CAFJ;AAGTR,IAAAA,KAAK,EAAE;AAHE;AAtB4B,CAAZ,CAAD,CAA5B;;AA6BA,MAAMY,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAG,CACf;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAE5C,KAFP;AAGE6C,IAAAA,KAAK,EAAE,IAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,WALR;AAMEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,OADV;AAEED,MAAAA,OAAO,EAAE;AAFX,KADO,EAKP;AACEC,MAAAA,MAAM,EAAE,OADV;AAEED,MAAAA,OAAO,EAAE;AAFX,KALO;AANX,GADe,EAkBf;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAE3C,IAFP;AAGE4C,IAAAA,KAAK,EAAE,IAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,aALR;AAMEC,IAAAA,OAAO,EAAE;AANX,GAlBe,EA0Bf;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAE1C,SAFP;AAGE2C,IAAAA,KAAK,EAAE,KAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,aALR;AAMEC,IAAAA,OAAO,EAAE;AANX,GA1Be,EAkCf;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAEzC,KAFP;AAGE0C,IAAAA,KAAK,EAAE,IAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,aALR;AAMEC,IAAAA,OAAO,EAAE;AANX,GAlCe,EA0Cf;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAExC,KAFP;AAGEyC,IAAAA,KAAK,EAAE,IAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,aALR;AAMEC,IAAAA,OAAO,EAAE;AANX,GA1Ce,EAkDf;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAEvC,OAFP;AAGEwC,IAAAA,KAAK,EAAE,IAHT;AAIEhB,IAAAA,KAAK,EAAE,KAJT;AAKEiB,IAAAA,IAAI,EAAE,aALR;AAMEC,IAAAA,OAAO,EAAE;AANX,GAlDe,CAAf;AA2DA,QAAME,OAAO,GAAGhC,SAAS,EAAzB;AACA,QAAM,CAACiC,UAAD,IAAejE,KAAK,CAACC,QAAN,CAAe2B,aAAf,CAArB;AACA,QAAM,CAACsC,IAAD,EAAOC,OAAP,IAAkBnE,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB,CA9DsB,CA+DtB;;AACA,QAAM,CAACmE,IAAD,EAAOC,OAAP,IAAkBrE,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBvB,KAAK,CAACC,QAAN,CAAewD,MAAf,CAA1B,CAjEsB,CAmEtB;;AACA,QAAMa,UAAU,GAAIC,IAAD,IAAU;AAC3B,wBACE;AAAK,MAAA,KAAK,EAAEN,UAAZ;AAAwB,MAAA,SAAS,EAAED,OAAO,CAACtB,KAA3C;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,oBAAP;AAAA,kBAA6B6B,IAAI,CAACX;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAEW,IAAI,CAACZ,GAAf;AAAoB,QAAA,GAAG,EAAEY,IAAI,CAACX,KAA9B;AACA,QAAA,KAAK,EAAE;AACChB,UAAAA,KAAK,EAAE;AADR;AADP;AAAA;AAAA;AAAA;AAAA,cAFF,EAMG2B,IAAI,CAACT,OAAL,CAAaU,GAAb,CAAkBV,OAAD,iBAClB;AACA,QAAA,KAAK,EAAI;AACP3B,UAAAA,OAAO,EAAG;AADH,SADT;AAAA,gCAIA;AAAA,0BAAM2B,OAAO,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAI,UAAA,KAAK,EAAI;AAACU,YAAAA,WAAW,EAAG;AAAf,WAAb;AAAA,0BAAmCX,OAAO,CAACA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,CANH,eAeE;AACA,QAAA,KAAK,EAAI;AACP3B,UAAAA,OAAO,EAAG;AADH,SADT;AAAA,gCAIE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,qBADL;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAE;AAAEuC,YAAAA,MAAM,EAAE;AAAV,WAHT;AAIE,UAAA,WAAW,EAAC,8BAJd;AAKE,UAAA,QAAQ,EAAIC,WALd;AAME,UAAA,UAAU,EAAC,sEANb;AAOE,UAAA,SAAS,MAPX;AAQE,UAAA,MAAM,EAAC,QART;AASE,UAAA,eAAe,EAAE;AACfC,YAAAA,MAAM,EAAE;AADO;AATnB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAiBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,OAAO,EAAE,MAAMC,UAAU,CAACN,IAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD,GAzCD;;AA2CA,QAAMO,UAAU,GAAIP,IAAD,IAAU;AAC3BJ,IAAAA,OAAO,CAAC,IAAD,CAAP,CAD2B,CAE3B;;AACAE,IAAAA,OAAO,CAACC,UAAU,CAACC,IAAD,CAAX,CAAP;AACD,GAJD;;AAMA,QAAMQ,WAAW,GAAG,MAAM;AACxBZ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,WAAW,GAAGzE,MAAM,EAA1B;;AAEA,QAAM2E,UAAU,GAAIN,IAAD,IAAU;AACvBS,IAAAA,OAAO,CAACT,IAAD,EACP;AACIR,MAAAA,MAAM,EAAE,OADZ;AAEID,MAAAA,OAAO,EAAEa,WAAW,CAACM,OAAZ,CAAoBC;AAFjC,KADO,CAAP;AAKL,GAND;;AASA,WAASF,OAAT,CAAiBT,IAAjB,EAAuBY,OAAvB,EAAgC;AAC9B,UAAMC,MAAM,GAAG9D,KAAK,CAAC+D,SAAN,CAAiBC,KAAD,IAAWA,KAAK,CAAC5B,EAAN,IAAYa,IAAI,CAACb,EAA5C,CAAf;AACA,UAAM6B,OAAO,GAAGjE,KAAK,CAACkE,MAAN,CAAaJ,MAAb,EAAqB,CAArB,EAAwB,CAAxB,CAAhB;AACA,UAAMK,QAAQ,GAAG,EACb,GAAGF,OADU;AAEbzB,MAAAA,OAAO,EAAE,CACP,GAAGyB,OAAO,CAACzB,OADJ,EAEPqB,OAFO,CAEA;AAFA;AAFI,KAAjB;AAQA5D,IAAAA,QAAQ,CAAC,CACPkE,QADO,EAEP,GAAGnE,KAFI,CAAD,CAAR;AAIA+C,IAAAA,OAAO,CAACC,UAAU,CAACmB,QAAD,CAAX,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAAC9B,IAAxB;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAE8B,OAAO,CAACrB,QAA9C;AAAA,gBACGrB,KAAK,CAACkD,GAAN,CAAWD,IAAD,iBACT,QAAC,YAAD;AAEE,QAAA,OAAO,EACL;AACA,cAAM;AACJO,UAAAA,UAAU,CAACP,IAAD,CAAV;AACD,SANL;AAAA,gCASE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACZ,GAAf;AAAoB,UAAA,GAAG,EAAEY,IAAI,CAACX;AAA9B;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,eAAD;AACE,UAAA,KAAK,EAAEW,IAAI,CAACX,KADd;AAEE,UAAA,UAAU,eACR,QAAC,UAAD;AACE,0BAAa,cAAaW,IAAI,CAACX,KAAM,EADvC;AAEE,YAAA,SAAS,EAAEI,OAAO,CAAClB,IAFrB;AAAA,mCAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SACOyB,IAAI,CAACmB,GADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eA6BE,QAAC,KAAD;AACE,MAAA,IAAI,EAAExB,IADR;AAEE,MAAA,OAAO,EAAEa,WAFX;AAGE,yBAAgB,oBAHlB;AAIE,0BAAiB,0BAJnB;AAAA,gBAMGX;AANH;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA9LD;;GAAMZ,S;UA4DYxB,S;;;KA5DZwB,S;AAgMN,eAAeA,SAAf","sourcesContent":["import React, {useState, useRef} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Header from \"./Header.js\";\nimport Vote from \"./Vote.js\";\n\nimport blanc from \"../static/images/blanc.jpg\";\nimport cass from \"../static/images/cass.png\";\nimport hoegarden from \"../static/images/hoegarden.jpg\";\nimport jinro from \"../static/images/jinro.jpeg\";\nimport terra from \"../static/images/terra.jpg\";\nimport chungha from \"../static/images/chungha.jpg\";\n//추가\nimport { Link } from \"react-router-dom\";\n\nlet store, setStore;\n\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch',\n  },\n}));\n\nconst ImageList = () => {\n  const images = [\n  {\n    id: 1,\n    url: blanc,\n    title: \"블랑\",\n    width: \"50%\",\n    link: \"/content/\",\n    comment: [\n      {\n        writer: 'user1',\n        comment: '블랑 소맥이 특이합니다'\n      },\n      {\n        writer: 'user2',\n        comment: '명란 구이랑 같이 먹는 걸 추천해요'\n      },\n    ],\n  },\n  {\n    id: 2,\n    url: cass,\n    title: \"카스\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: [],\n  },\n  {\n    id: 3,\n    url: hoegarden,\n    title: \"호가든\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: [],\n  },\n  {\n    id: 4,\n    url: jinro,\n    title: \"진로\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: [],\n  },\n  {\n    id: 5,\n    url: terra,\n    title: \"테라\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: [],\n  },\n  {\n    id: 6,\n    url: chungha,\n    title: \"청하\",\n    width: \"50%\",\n    link: \"/community/\",\n    comment: [],\n  },\n];\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  //추가\n  const [body, setBody] = React.useState(null);\n  const [store, setStore] = React.useState(images);\n\n  //추가\n  const createBody = (tile) => {\n    return (\n      <div style={modalStyle} className={classes.paper}>\n        <h3 id=\"simple-modal-title\">{tile.title}</h3>\n        <img src={tile.url} alt={tile.title} \n        style={{\n                width: '100%',\n              }}/>\n        {tile.comment.map((comment)=>\n        <div\n        style = {{\n          display : 'flex'\n          }}>\n        <h4> {comment.writer} </h4>\n        <h5 style = {{paddingLeft : 10}}> {comment.comment} </h5>\n        </div>\n        )}\n        <div\n        style = {{\n          display : 'flex'\n        }}>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"댓글\"\n            style={{ margin: 8 }}\n            placeholder=\"이 술은요...\"\n            inputRef = {userComment}\n            helperText=\"당신의 경험을 남겨주세요\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={() => addHandler(tile)}>\n            게시\n          </Button>\n        </div>\n        {/* <SimpleModal /> */}\n      </div>\n    );\n  };\n\n  const handleOpen = (tile) => {\n    setOpen(true);\n    //추가\n    setBody(createBody(tile));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const userComment = useRef();\n\n  const addHandler = (tile) => {        \n        addItem(tile,\n        {\n            writer: 'user3',\n            comment: userComment.current.value\n        })\n  };\n\n\n  function addItem(tile, newItem) {\n    const target = store.findIndex((image) => image.id == tile.id);\n    const deleted = store.splice(target, 1)[0];\n    const newImage = {\n        ...deleted,\n        comment: [\n          ...deleted.comment,\n          newItem//이건 새로받은 comment임\n        ]\n      };\n\n    setStore([\n      newImage,\n      ...store,\n    ]);\n    setBody(createBody(newImage));\n  }\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Vote/>\n      <GridList cellHeight={180} className={classes.gridList}>\n        {store.map((tile) => (\n          <GridListTile\n            key={tile.img}\n            onClick={\n              //추가\n              () => {\n                handleOpen(tile);\n              }\n            }\n          >\n            <img src={tile.url} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default ImageList;\n"]},"metadata":{},"sourceType":"module"}